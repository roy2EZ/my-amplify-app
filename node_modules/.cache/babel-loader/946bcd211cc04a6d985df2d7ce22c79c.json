{"ast":null,"code":"var _jsxFileName = \"/Users/cherongy/my-amplify-app/src/App.js\";\n// src/App.js\nimport React, { useEffect, useReducer } from 'react';\nimport { API, graphqlOperation } from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport { listCoins } from './graphql/queries';\nimport { createCoin as CreateCoin } from './graphql/mutations'; // import uuid to create a unique client ID\n\nimport uuid from 'uuidv4';\nconst CLIENT_ID = uuid(); // create initial state\n\nconst initialState = {\n  name: '',\n  price: '',\n  symbol: '',\n  coins: []\n}; // create reducer to update state\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SETCOINS':\n      return { ...state,\n        coins: action.coins\n      };\n\n    case 'SETINPUT':\n      return { ...state,\n        [action.key]: action.value\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  async function getData() {\n    try {\n      const coinData = await API.graphql(graphqlOperation(listCoins));\n      console.log('data from API: ', coinData);\n      dispatch({\n        type: 'SETCOINS',\n        coins: coinData.data.listCoins.items\n      });\n    } catch (err) {\n      console.log('error fetching data..', err);\n    }\n  }\n\n  async function createCoin() {\n    const {\n      name,\n      price,\n      symbol\n    } = state;\n    if (name === '' || price === '' || symbol === '') return;\n    const coin = {\n      name,\n      price: parseFloat(price),\n      symbol,\n      clientId: CLIENT_ID\n    };\n    const coins = [...state.coins, coin];\n    dispatch({\n      type: 'SETCOINS',\n      coins\n    });\n    console.log('coin:', coin);\n\n    try {\n      await API.graphql(graphqlOperation(CreateCoin, {\n        input: coin\n      }));\n      console.log('item created!');\n    } catch (err) {\n      console.log('error creating coin...', err);\n    }\n  } // change state then user types into input\n\n\n  function onChange(e) {\n    dispatch({\n      type: 'SETINPUT',\n      key: e.target.name,\n      value: e.target.value\n    });\n  } // add UI with event handlers to manage user input\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\",\n    placeholder: \"name\",\n    onChange: onChange,\n    value: state.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"price\",\n    placeholder: \"price\",\n    onChange: onChange,\n    value: state.price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"symbol\",\n    placeholder: \"symbol\",\n    onChange: onChange,\n    value: state.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: createCoin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Create Coin\"), state.coins.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, c.symbol), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, c.price))));\n}\n\nexport default withAuthenticator(App, {\n  includeGreetings: true\n});","map":{"version":3,"sources":["/Users/cherongy/my-amplify-app/src/App.js"],"names":["React","useEffect","useReducer","API","graphqlOperation","withAuthenticator","listCoins","createCoin","CreateCoin","uuid","CLIENT_ID","initialState","name","price","symbol","coins","reducer","state","action","type","key","value","App","dispatch","getData","coinData","graphql","console","log","data","items","err","coin","parseFloat","clientId","input","onChange","e","target","map","c","i","includeGreetings"],"mappings":"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","sourcesContent":["// src/App.js\nimport React, { useEffect, useReducer } from 'react'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { withAuthenticator } from 'aws-amplify-react'\nimport { listCoins } from './graphql/queries'\nimport { createCoin as CreateCoin } from './graphql/mutations'\n\n// import uuid to create a unique client ID\nimport uuid from 'uuidv4'\n\nconst CLIENT_ID = uuid()\n\n// create initial state\nconst initialState = {\n  name: '', price: '', symbol: '', coins: []\n}\n\n// create reducer to update state\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'SETCOINS':\n      return { ...state, coins: action.coins }\n    case 'SETINPUT':\n      return { ...state, [action.key]: action.value }\n    default:\n      return state\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  async function getData() {\n    try {\n      const coinData = await API.graphql(graphqlOperation(listCoins))\n      console.log('data from API: ', coinData)\n      dispatch({ type: 'SETCOINS', coins: coinData.data.listCoins.items})\n    } catch (err) {\n      console.log('error fetching data..', err)\n    }\n  }\n\n  async function createCoin() {\n    const { name, price, symbol } = state\n    if (name === '' || price === '' || symbol === '') return\n    const coin = {\n      name, price: parseFloat(price), symbol, clientId: CLIENT_ID\n    }\n    const coins = [...state.coins, coin]\n    dispatch({ type: 'SETCOINS', coins })\n    console.log('coin:', coin)\n\n    try {\n      await API.graphql(graphqlOperation(CreateCoin, { input: coin }))\n      console.log('item created!')\n    } catch (err) {\n      console.log('error creating coin...', err)\n    }\n  }\n\n  // change state then user types into input\n  function onChange(e) {\n    dispatch({ type: 'SETINPUT', key: e.target.name, value: e.target.value })\n  }\n\n  // add UI with event handlers to manage user input\n  return (\n    <div>\n      <input\n        name='name'\n        placeholder='name'\n        onChange={onChange}\n        value={state.name}\n      />\n      <input\n        name='price'\n        placeholder='price'\n        onChange={onChange}\n        value={state.price}\n      />\n      <input\n        name='symbol'\n        placeholder='symbol'\n        onChange={onChange}\n        value={state.symbol}\n      />\n      <button onClick={createCoin}>Create Coin</button>\n      {\n        state.coins.map((c, i) => (\n          <div key={i}>\n            <h2>{c.name}</h2>\n            <h4>{c.symbol}</h4>\n            <p>{c.price}</p>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default withAuthenticator(App, { includeGreetings: true })\n"]},"metadata":{},"sourceType":"module"}